import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./par/par-login.service";
import * as i2 from "./popup/popup-login.service";
import * as i3 from "./standard/standard-login.service";
import * as i4 from "../storage/storage-persistence.service";
export class LoginService {
    constructor(parLoginService, popUpLoginService, standardLoginService, storagePersistenceService) {
        this.parLoginService = parLoginService;
        this.popUpLoginService = popUpLoginService;
        this.standardLoginService = standardLoginService;
        this.storagePersistenceService = storagePersistenceService;
    }
    login(configuration, authOptions) {
        const { usePushedAuthorisationRequests } = configuration;
        if (authOptions?.customParams) {
            this.storagePersistenceService.write('storageCustomParamsAuthRequest', authOptions.customParams, configuration);
        }
        if (usePushedAuthorisationRequests) {
            return this.parLoginService.loginPar(configuration, authOptions);
        }
        else {
            return this.standardLoginService.loginStandard(configuration, authOptions);
        }
    }
    loginWithPopUp(configuration, allConfigs, authOptions, popupOptions) {
        const { usePushedAuthorisationRequests } = configuration;
        if (authOptions?.customParams) {
            this.storagePersistenceService.write('storageCustomParamsAuthRequest', authOptions.customParams, configuration);
        }
        if (usePushedAuthorisationRequests) {
            return this.parLoginService.loginWithPopUpPar(configuration, allConfigs, authOptions, popupOptions);
        }
        else {
            return this.popUpLoginService.loginWithPopUpStandard(configuration, allConfigs, authOptions, popupOptions);
        }
    }
}
LoginService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: LoginService, deps: [{ token: i1.ParLoginService }, { token: i2.PopUpLoginService }, { token: i3.StandardLoginService }, { token: i4.StoragePersistenceService }], target: i0.ɵɵFactoryTarget.Injectable });
LoginService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: LoginService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: LoginService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ParLoginService }, { type: i2.PopUpLoginService }, { type: i3.StandardLoginService }, { type: i4.StoragePersistenceService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItYXV0aC1vaWRjLWNsaWVudC9zcmMvbGliL2xvZ2luL2xvZ2luLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7O0FBWTNDLE1BQU0sT0FBTyxZQUFZO0lBQ3ZCLFlBQ21CLGVBQWdDLEVBQ2hDLGlCQUFvQyxFQUNwQyxvQkFBMEMsRUFDMUMseUJBQW9EO1FBSHBELG9CQUFlLEdBQWYsZUFBZSxDQUFpQjtRQUNoQyxzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBQ3BDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUFDMUMsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUEyQjtJQUNwRSxDQUFDO0lBRUosS0FBSyxDQUFDLGFBQWtDLEVBQUUsV0FBeUI7UUFDakUsTUFBTSxFQUFFLDhCQUE4QixFQUFFLEdBQUcsYUFBYSxDQUFDO1FBRXpELElBQUksV0FBVyxFQUFFLFlBQVksRUFBRTtZQUM3QixJQUFJLENBQUMseUJBQXlCLENBQUMsS0FBSyxDQUFDLGdDQUFnQyxFQUFFLFdBQVcsQ0FBQyxZQUFZLEVBQUUsYUFBYSxDQUFDLENBQUM7U0FDakg7UUFFRCxJQUFJLDhCQUE4QixFQUFFO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1NBQ2xFO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxhQUFhLENBQUMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxDQUFDO1NBQzVFO0lBQ0gsQ0FBQztJQUVELGNBQWMsQ0FDWixhQUFrQyxFQUNsQyxVQUFpQyxFQUNqQyxXQUF5QixFQUN6QixZQUEyQjtRQUUzQixNQUFNLEVBQUUsOEJBQThCLEVBQUUsR0FBRyxhQUFhLENBQUM7UUFFekQsSUFBSSxXQUFXLEVBQUUsWUFBWSxFQUFFO1lBQzdCLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxLQUFLLENBQUMsZ0NBQWdDLEVBQUUsV0FBVyxDQUFDLFlBQVksRUFBRSxhQUFhLENBQUMsQ0FBQztTQUNqSDtRQUVELElBQUksOEJBQThCLEVBQUU7WUFDbEMsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLFlBQVksQ0FBQyxDQUFDO1NBQ3JHO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxzQkFBc0IsQ0FBQyxhQUFhLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxZQUFZLENBQUMsQ0FBQztTQUM1RztJQUNILENBQUM7O3lHQXZDVSxZQUFZOzZHQUFaLFlBQVk7MkZBQVosWUFBWTtrQkFEeEIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBBdXRoT3B0aW9ucyB9IGZyb20gJy4uL2F1dGgtb3B0aW9ucyc7XHJcbmltcG9ydCB7IE9wZW5JZENvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi9jb25maWcvb3BlbmlkLWNvbmZpZ3VyYXRpb24nO1xyXG5pbXBvcnQgeyBTdG9yYWdlUGVyc2lzdGVuY2VTZXJ2aWNlIH0gZnJvbSAnLi4vc3RvcmFnZS9zdG9yYWdlLXBlcnNpc3RlbmNlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBMb2dpblJlc3BvbnNlIH0gZnJvbSAnLi9sb2dpbi1yZXNwb25zZSc7XHJcbmltcG9ydCB7IFBhckxvZ2luU2VydmljZSB9IGZyb20gJy4vcGFyL3Bhci1sb2dpbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgUG9wVXBMb2dpblNlcnZpY2UgfSBmcm9tICcuL3BvcHVwL3BvcHVwLWxvZ2luLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBQb3B1cE9wdGlvbnMgfSBmcm9tICcuL3BvcHVwL3BvcHVwLW9wdGlvbnMnO1xyXG5pbXBvcnQgeyBTdGFuZGFyZExvZ2luU2VydmljZSB9IGZyb20gJy4vc3RhbmRhcmQvc3RhbmRhcmQtbG9naW4uc2VydmljZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBMb2dpblNlcnZpY2Uge1xyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgcHJpdmF0ZSByZWFkb25seSBwYXJMb2dpblNlcnZpY2U6IFBhckxvZ2luU2VydmljZSxcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgcG9wVXBMb2dpblNlcnZpY2U6IFBvcFVwTG9naW5TZXJ2aWNlLFxyXG4gICAgcHJpdmF0ZSByZWFkb25seSBzdGFuZGFyZExvZ2luU2VydmljZTogU3RhbmRhcmRMb2dpblNlcnZpY2UsXHJcbiAgICBwcml2YXRlIHJlYWRvbmx5IHN0b3JhZ2VQZXJzaXN0ZW5jZVNlcnZpY2U6IFN0b3JhZ2VQZXJzaXN0ZW5jZVNlcnZpY2VcclxuICApIHt9XHJcblxyXG4gIGxvZ2luKGNvbmZpZ3VyYXRpb246IE9wZW5JZENvbmZpZ3VyYXRpb24sIGF1dGhPcHRpb25zPzogQXV0aE9wdGlvbnMpOiB2b2lkIHtcclxuICAgIGNvbnN0IHsgdXNlUHVzaGVkQXV0aG9yaXNhdGlvblJlcXVlc3RzIH0gPSBjb25maWd1cmF0aW9uO1xyXG5cclxuICAgIGlmIChhdXRoT3B0aW9ucz8uY3VzdG9tUGFyYW1zKSB7XHJcbiAgICAgIHRoaXMuc3RvcmFnZVBlcnNpc3RlbmNlU2VydmljZS53cml0ZSgnc3RvcmFnZUN1c3RvbVBhcmFtc0F1dGhSZXF1ZXN0JywgYXV0aE9wdGlvbnMuY3VzdG9tUGFyYW1zLCBjb25maWd1cmF0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodXNlUHVzaGVkQXV0aG9yaXNhdGlvblJlcXVlc3RzKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnBhckxvZ2luU2VydmljZS5sb2dpblBhcihjb25maWd1cmF0aW9uLCBhdXRoT3B0aW9ucyk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gdGhpcy5zdGFuZGFyZExvZ2luU2VydmljZS5sb2dpblN0YW5kYXJkKGNvbmZpZ3VyYXRpb24sIGF1dGhPcHRpb25zKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGxvZ2luV2l0aFBvcFVwKFxyXG4gICAgY29uZmlndXJhdGlvbjogT3BlbklkQ29uZmlndXJhdGlvbixcclxuICAgIGFsbENvbmZpZ3M6IE9wZW5JZENvbmZpZ3VyYXRpb25bXSxcclxuICAgIGF1dGhPcHRpb25zPzogQXV0aE9wdGlvbnMsXHJcbiAgICBwb3B1cE9wdGlvbnM/OiBQb3B1cE9wdGlvbnNcclxuICApOiBPYnNlcnZhYmxlPExvZ2luUmVzcG9uc2U+IHtcclxuICAgIGNvbnN0IHsgdXNlUHVzaGVkQXV0aG9yaXNhdGlvblJlcXVlc3RzIH0gPSBjb25maWd1cmF0aW9uO1xyXG5cclxuICAgIGlmIChhdXRoT3B0aW9ucz8uY3VzdG9tUGFyYW1zKSB7XHJcbiAgICAgIHRoaXMuc3RvcmFnZVBlcnNpc3RlbmNlU2VydmljZS53cml0ZSgnc3RvcmFnZUN1c3RvbVBhcmFtc0F1dGhSZXF1ZXN0JywgYXV0aE9wdGlvbnMuY3VzdG9tUGFyYW1zLCBjb25maWd1cmF0aW9uKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodXNlUHVzaGVkQXV0aG9yaXNhdGlvblJlcXVlc3RzKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnBhckxvZ2luU2VydmljZS5sb2dpbldpdGhQb3BVcFBhcihjb25maWd1cmF0aW9uLCBhbGxDb25maWdzLCBhdXRoT3B0aW9ucywgcG9wdXBPcHRpb25zKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnBvcFVwTG9naW5TZXJ2aWNlLmxvZ2luV2l0aFBvcFVwU3RhbmRhcmQoY29uZmlndXJhdGlvbiwgYWxsQ29uZmlncywgYXV0aE9wdGlvbnMsIHBvcHVwT3B0aW9ucyk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==