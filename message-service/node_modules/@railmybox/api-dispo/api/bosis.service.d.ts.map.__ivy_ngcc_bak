{"version":3,"file":"bosis.service.d.ts","sources":["bosis.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["/**\n * Disposition\n * This is the OpenAPI description for the disposition service. The disposition service is used to communicate with other service providers.\n *\n * The version of the OpenAPI document: 1.0.52\n * Contact: developer@railmybox.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { HttpClient, HttpHeaders, HttpResponse, HttpEvent, HttpParameterCodec } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BosisMessageModel } from '../model/models';\nimport { Configuration } from '../configuration';\nexport declare class BOSISService {\n    protected httpClient: HttpClient;\n    protected basePath: string;\n    defaultHeaders: HttpHeaders;\n    configuration: Configuration;\n    encoder: HttpParameterCodec;\n    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);\n    private addToHttpParams;\n    private addToHttpParamsRecursive;\n    /**\n     * Process an BOSIS status message\n     * Post status messages and responses from BOSIS.\n     * @param bosisMessageModel\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    processBosisMessage(bosisMessageModel: BosisMessageModel, observe?: 'body', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/problem+json';\n    }): Observable<any>;\n    processBosisMessage(bosisMessageModel: BosisMessageModel, observe?: 'response', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/problem+json';\n    }): Observable<HttpResponse<any>>;\n    processBosisMessage(bosisMessageModel: BosisMessageModel, observe?: 'events', reportProgress?: boolean, options?: {\n        httpHeaderAccept?: 'application/problem+json';\n    }): Observable<HttpEvent<any>>;\n}\n"]}