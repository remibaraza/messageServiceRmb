/**
 * Disposition
 * This is the OpenAPI description for the disposition service. The disposition service is used to communicate with other service providers.
 *
 * The version of the OpenAPI document: 1.0.52
 * Contact: developer@railmybox.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
export const BookingStatusTypeModel = {
    InCapture: 'IN_CAPTURE',
    Verification: 'VERIFICATION',
    Accepted: 'ACCEPTED',
    MissingData: 'MISSING_DATA',
    MissingDataUrgent: 'MISSING_DATA_URGENT',
    Denied: 'DENIED',
    Rebooking: 'REBOOKING',
    Cancelled: 'CANCELLED',
    Dispatched: 'DISPATCHED',
    BookingClosed: 'BOOKING_CLOSED',
    InProgress: 'IN_PROGRESS',
    TransportProblem: 'TRANSPORT_PROBLEM',
    Done: 'DONE',
    Invoiced: 'INVOICED',
    UnderReview: 'UNDER_REVIEW',
    RequestCancellation: 'REQUEST_CANCELLATION',
    Arrived: 'ARRIVED'
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9va2luZy1zdGF0dXMtdHlwZS5tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIvb3B0L2F0bGFzc2lhbi9waXBlbGluZXMvYWdlbnQvYnVpbGQvZGlzdC90eXBlc2NyaXB0LWFuZ3VsYXIvZGlzcG8vIiwic291cmNlcyI6WyJtb2RlbC9ib29raW5nLXN0YXR1cy10eXBlLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0dBVUc7QUFRSCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRztJQUNsQyxTQUFTLEVBQUUsWUFBc0M7SUFDakQsWUFBWSxFQUFFLGNBQXdDO0lBQ3RELFFBQVEsRUFBRSxVQUFvQztJQUM5QyxXQUFXLEVBQUUsY0FBd0M7SUFDckQsaUJBQWlCLEVBQUUscUJBQStDO0lBQ2xFLE1BQU0sRUFBRSxRQUFrQztJQUMxQyxTQUFTLEVBQUUsV0FBcUM7SUFDaEQsU0FBUyxFQUFFLFdBQXFDO0lBQ2hELFVBQVUsRUFBRSxZQUFzQztJQUNsRCxhQUFhLEVBQUUsZ0JBQTBDO0lBQ3pELFVBQVUsRUFBRSxhQUF1QztJQUNuRCxnQkFBZ0IsRUFBRSxtQkFBNkM7SUFDL0QsSUFBSSxFQUFFLE1BQWdDO0lBQ3RDLFFBQVEsRUFBRSxVQUFvQztJQUM5QyxXQUFXLEVBQUUsY0FBd0M7SUFDckQsbUJBQW1CLEVBQUUsc0JBQWdEO0lBQ3JFLE9BQU8sRUFBRSxTQUFtQztDQUMvQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEaXNwb3NpdGlvblxuICogVGhpcyBpcyB0aGUgT3BlbkFQSSBkZXNjcmlwdGlvbiBmb3IgdGhlIGRpc3Bvc2l0aW9uIHNlcnZpY2UuIFRoZSBkaXNwb3NpdGlvbiBzZXJ2aWNlIGlzIHVzZWQgdG8gY29tbXVuaWNhdGUgd2l0aCBvdGhlciBzZXJ2aWNlIHByb3ZpZGVycy4gXG4gKlxuICogVGhlIHZlcnNpb24gb2YgdGhlIE9wZW5BUEkgZG9jdW1lbnQ6IDEuMC41MlxuICogQ29udGFjdDogZGV2ZWxvcGVyQHJhaWxteWJveC5pb1xuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuXG5cbi8qKlxuICogVGhlIHN0YXR1cyBvZiB0aGUgb3JkZXI6ICogYElOX0NBUFRVUkVgIC0gQ3JlYXRlZCBhbmQgbm90IHBsYWNlZCB5ZXQgKiBgVkVSSUZJQ0FUSU9OYCAtIE9yZGVyIGhhcyBiZSBwbGFjZWQgZm9yIGJvb2tpbmcgYW5kIGlzIGJlaW5nIHNlbnQgdG8gdGhlIHByb3ZpZGVycyAqIGBBQ0NFUFRFRGAgLSBPcmRlciBoYXMgYmVlbiBhY2NlcHRlZCBieSBhbGwgcHJvdmlkZXJzICogYE1JU1NJTkdfREFUQWAgLSBEYXRhIGlzIG1pc3NpbmcgZm9yIHRyYW5zcG9ydCAqIGBNSVNTSU5HX0RBVEFfVVJHRU5UYCAtIERhdGEgaXMgbWlzc2luZyBmb3IgdHJhbnNwb3J0IGFuZCBkZWFkbGluZSBpcyBuZWFybHkgaGl0ICogYERFTklFRGAgLSBSZWplY3RlZCBieSBhIHByb3ZpZGVyICogYFJFQk9PS0lOR2AgLSBUaGUgY3VzdG9tZXIgbXVzdCByZWJvb2sgdGhlIG9yZGVyLCBzaW5jZSBkZWFkbGluZXMgYXJlIG5vdCBtZXQgb3IgdHJhbnNwb3J0IHByb2JsZW0gKiBgQ0FOQ0VMTEVEYCAtIEJvb2tpbmcgY2FuY2VsbGVkICogYERJU1BBVENIRURgIC0gRGlzcGF0Y2hlZCAqIGBCT09LSU5HX0NMT1NFRGAgLSBUaGUgYm9va2luZyBpcyBjbG9zZWQgYW5kIG5vIGNoYW5nZXMgYXJlIHBvc3NpYmxlICogYElOX1BST0dSRVNTYCAtIFRyYW5zcG9ydCBpcyBpbiBwcm9ncmVzcyAqIGBUUkFOU1BPUlRfUFJPQkxFTWAgLSBBIHRyYW5zcG9ydCBwcm9ibGVtIGhhcyBvY2N1cmVkICogYERPTkVgIC0gVGhlIHRyYW5zcG9ydCBpcyBmaW5pc2hlZCBhbmQgdGhlIG9yZGVyIGlzIGRvbmUgKiBgSU5WT0lDRURgIC0gSW52b2ljZSBoYXMgYmVlbiBjcmVhdGVkICogYFVOREVSX1JFVklFV2AgLSBPcmRlciBpcyB1bmRlciByZXZpZXcgaWUuIGluIGNhc2Ugb2YgZW1iYXJnbyAqIGBSRVFVRVNUX0NBTkNFTExBVElPTmAgLSBVc2VyIGhhcyByZXF1ZXN0ZWQgdGhlIGNhbmNlbGxhdGlvbiBvZiB0aGUgYm9va2luZyAqIGBBUlJJVkVEYCAtIFRoZSB0cmFuc3BvcnQgaGFzIGFycml2ZWQgYXQgc3RhdGlvbiwgaW1wb3J0IG9ubHkgXG4gKi9cbmV4cG9ydCB0eXBlIEJvb2tpbmdTdGF0dXNUeXBlTW9kZWwgPSAnSU5fQ0FQVFVSRScgfCAnVkVSSUZJQ0FUSU9OJyB8ICdBQ0NFUFRFRCcgfCAnTUlTU0lOR19EQVRBJyB8ICdNSVNTSU5HX0RBVEFfVVJHRU5UJyB8ICdERU5JRUQnIHwgJ1JFQk9PS0lORycgfCAnQ0FOQ0VMTEVEJyB8ICdESVNQQVRDSEVEJyB8ICdCT09LSU5HX0NMT1NFRCcgfCAnSU5fUFJPR1JFU1MnIHwgJ1RSQU5TUE9SVF9QUk9CTEVNJyB8ICdET05FJyB8ICdJTlZPSUNFRCcgfCAnVU5ERVJfUkVWSUVXJyB8ICdSRVFVRVNUX0NBTkNFTExBVElPTicgfCAnQVJSSVZFRCc7XG5cbmV4cG9ydCBjb25zdCBCb29raW5nU3RhdHVzVHlwZU1vZGVsID0ge1xuICAgIEluQ2FwdHVyZTogJ0lOX0NBUFRVUkUnIGFzIEJvb2tpbmdTdGF0dXNUeXBlTW9kZWwsXG4gICAgVmVyaWZpY2F0aW9uOiAnVkVSSUZJQ0FUSU9OJyBhcyBCb29raW5nU3RhdHVzVHlwZU1vZGVsLFxuICAgIEFjY2VwdGVkOiAnQUNDRVBURUQnIGFzIEJvb2tpbmdTdGF0dXNUeXBlTW9kZWwsXG4gICAgTWlzc2luZ0RhdGE6ICdNSVNTSU5HX0RBVEEnIGFzIEJvb2tpbmdTdGF0dXNUeXBlTW9kZWwsXG4gICAgTWlzc2luZ0RhdGFVcmdlbnQ6ICdNSVNTSU5HX0RBVEFfVVJHRU5UJyBhcyBCb29raW5nU3RhdHVzVHlwZU1vZGVsLFxuICAgIERlbmllZDogJ0RFTklFRCcgYXMgQm9va2luZ1N0YXR1c1R5cGVNb2RlbCxcbiAgICBSZWJvb2tpbmc6ICdSRUJPT0tJTkcnIGFzIEJvb2tpbmdTdGF0dXNUeXBlTW9kZWwsXG4gICAgQ2FuY2VsbGVkOiAnQ0FOQ0VMTEVEJyBhcyBCb29raW5nU3RhdHVzVHlwZU1vZGVsLFxuICAgIERpc3BhdGNoZWQ6ICdESVNQQVRDSEVEJyBhcyBCb29raW5nU3RhdHVzVHlwZU1vZGVsLFxuICAgIEJvb2tpbmdDbG9zZWQ6ICdCT09LSU5HX0NMT1NFRCcgYXMgQm9va2luZ1N0YXR1c1R5cGVNb2RlbCxcbiAgICBJblByb2dyZXNzOiAnSU5fUFJPR1JFU1MnIGFzIEJvb2tpbmdTdGF0dXNUeXBlTW9kZWwsXG4gICAgVHJhbnNwb3J0UHJvYmxlbTogJ1RSQU5TUE9SVF9QUk9CTEVNJyBhcyBCb29raW5nU3RhdHVzVHlwZU1vZGVsLFxuICAgIERvbmU6ICdET05FJyBhcyBCb29raW5nU3RhdHVzVHlwZU1vZGVsLFxuICAgIEludm9pY2VkOiAnSU5WT0lDRUQnIGFzIEJvb2tpbmdTdGF0dXNUeXBlTW9kZWwsXG4gICAgVW5kZXJSZXZpZXc6ICdVTkRFUl9SRVZJRVcnIGFzIEJvb2tpbmdTdGF0dXNUeXBlTW9kZWwsXG4gICAgUmVxdWVzdENhbmNlbGxhdGlvbjogJ1JFUVVFU1RfQ0FOQ0VMTEFUSU9OJyBhcyBCb29raW5nU3RhdHVzVHlwZU1vZGVsLFxuICAgIEFycml2ZWQ6ICdBUlJJVkVEJyBhcyBCb29raW5nU3RhdHVzVHlwZU1vZGVsXG59O1xuXG4iXX0=